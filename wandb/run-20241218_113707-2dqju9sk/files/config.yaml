_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_episode_storage:
    value: None
_last_episode_starts:
    value: '[ True  True]'
_last_obs:
    value: |-
        [[ 6.82441513e-01  4.97603942e-03  4.58845141e-03  9.72937320e-02
           1.09659683e+00  1.87268679e-02  3.42687800e-03  2.49951585e-02
           8.81461766e-02 -7.63715329e-02 -2.50746407e-02 -1.94597421e-03
           1.51879057e-02 -7.66681278e-02 -2.22948496e-02 -9.01330532e-02
          -6.92506870e-02  1.37451419e-02  3.83512878e-02 -6.66538763e-03
           5.74822698e-02 -9.63058919e-02 -8.24812551e-02  3.31927920e-02
           1.49964338e-01 -1.72409397e-02  1.22026793e-01  2.96668465e-04
          -1.34230505e-01 -3.18624498e-03  2.39563674e-02  2.86434821e-02
          -3.90361379e-03 -1.31208333e-01 -2.29409235e-03  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00]
         [ 5.21559091e-01 -8.46068116e-02 -9.77714638e-02 -8.00347694e-02
           9.07407765e-01 -5.53919294e-02  2.80489353e-02  5.75081792e-02
           6.78766538e-03 -4.23731204e-02 -1.52445309e-02 -7.73458853e-02
           1.53471054e-02 -3.51424934e-02 -7.88145059e-02 -5.13390137e-02
           2.38207598e-02  1.25745534e-02 -9.93122122e-02 -6.15891450e-02
           7.74485270e-02  5.49166687e-02  1.06217776e-01  6.84221762e-03
          -4.17577676e-02 -9.41760569e-02  1.60962167e-01  8.60965939e-02
          -2.13332667e-01  9.98653032e-02 -1.39015547e-01 -5.72773127e-02
          -7.22764603e-02  9.47974167e-02  7.86319204e-02  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00
           0.00000000e+00]]
_last_original_obs:
    value: None
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x7e6993872ec0>
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 1000000
_vec_normalize_env:
    value: None
_wandb:
    value:
        cli_version: 0.19.1
        code_path: code/run_experiments.py
        m: []
        python_version: 3.10.12
        t:
            "1":
                - 1
                - 55
            "2":
                - 1
                - 55
            "3":
                - 1
                - 13
                - 22
                - 23
                - 35
                - 55
            "4": 3.10.12
            "5": 0.19.1
            "8":
                - 5
            "12": 0.19.1
            "13": linux-x86_64
action_noise:
    value: None
action_space:
    value: Box(-6.28, 6.28, (12,), float32)
actor:
    value: |-
        Actor(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (latent_pi): Sequential(
            (0): Linear(in_features=113, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
          )
          (mu): Linear(in_features=256, out_features=12, bias=True)
          (log_std): Linear(in_features=256, out_features=12, bias=True)
        )
algo:
    value: SAC
batch_norm_stats:
    value: '[]'
batch_norm_stats_target:
    value: '[]'
batch_size:
    value: 256
buffer_size:
    value: 1000000
critic:
    value: |-
        ContinuousCritic(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (qf0): Sequential(
            (0): Linear(in_features=125, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
          (qf1): Sequential(
            (0): Linear(in_features=125, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
        )
critic_target:
    value: |-
        ContinuousCritic(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (qf0): Sequential(
            (0): Linear(in_features=125, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
          (qf1): Sequential(
            (0): Linear(in_features=125, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
        )
device:
    value: cuda
ent_coef:
    value: auto
ent_coef_optimizer:
    value: |-
        Adam (
        Parameter Group 0
            amsgrad: False
            betas: (0.9, 0.999)
            capturable: False
            differentiable: False
            eps: 1e-08
            foreach: None
            fused: None
            lr: 0.0003
            maximize: False
            weight_decay: 0
        )
env:
    value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x7e69a89c9b10>
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
gamma:
    value: 0.99
gradient_steps:
    value: 1
learning_rate:
    value: 0.0003
learning_starts:
    value: 100
log_ent_coef:
    value: tensor([0.], device='cuda:0', requires_grad=True)
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x7e69a6fb3b50>
n_envs:
    value: 2
num_timesteps:
    value: 0
observation_space:
    value: Box(-inf, inf, (113,), float64)
optimize_memory_usage:
    value: "False"
policy:
    value: |-
        SACPolicy(
          (actor): Actor(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (latent_pi): Sequential(
              (0): Linear(in_features=113, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
            )
            (mu): Linear(in_features=256, out_features=12, bias=True)
            (log_std): Linear(in_features=256, out_features=12, bias=True)
          )
          (critic): ContinuousCritic(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (qf0): Sequential(
              (0): Linear(in_features=125, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
            (qf1): Sequential(
              (0): Linear(in_features=125, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
          )
          (critic_target): ContinuousCritic(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (qf0): Sequential(
              (0): Linear(in_features=125, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
            (qf1): Sequential(
              (0): Linear(in_features=125, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
          )
        )
policy_class:
    value: <class 'stable_baselines3.sac.policies.SACPolicy'>
policy_kwargs:
    value: '{''use_sde'': False}'
replay_buffer:
    value: <stable_baselines3.common.buffers.ReplayBuffer object at 0x7e69a6fa2f50>
replay_buffer_class:
    value: <class 'stable_baselines3.common.buffers.ReplayBuffer'>
replay_buffer_kwargs:
    value: '{}'
sde_sample_freq:
    value: -1
seed:
    value: None
start_time:
    value: 1734532629998898602
target_entropy:
    value: -12
target_update_interval:
    value: 1
tau:
    value: 0.005
tensorboard_log:
    value: runs/SAC
train_freq:
    value: 'TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde:
    value: "False"
use_sde_at_warmup:
    value: "False"
verbose:
    value: 1
